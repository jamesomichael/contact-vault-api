openapi: 3.0.3
info:
    title: Contact Vault API
    description: Manage your contacts with the Contact Vault API.
    version: 1.0.0
servers:
    - url: http://localhost:3000
tags:
    - name: Auth
      description: User authentication.
    - name: Contacts
paths:
    /api/auth/register:
        post:
            tags:
                - Auth
            summary: Create a new user account.
            description: Create a new user account.
            operationId: register
            requestBody:
                description: Register a new Contact Vault user.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterUser'
                required: true
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthUserResponse'
                '409':
                    description: User already exists
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserAlreadyExistsResponse'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServerErrorResponse'
    /api/auth/login:
        post:
            tags:
                - Auth
            summary: Log in to a user account.
            description: Log in to a user account.
            operationId: login
            requestBody:
                description: Log in to an existing Contact Vault account.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogInUser'
                required: true
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthUserResponse'
                '401':
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvalidCredentialsResponse'
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ServerErrorResponse'
components:
    schemas:
        RegisterUser:
            type: object
            required:
                - name
                - email
                - password
            properties:
                name:
                    type: string
                    example: 'John Doe'
                email:
                    type: string
                    format: email
                    example: 'john.doe@example.com'
                password:
                    type: string
                    example: p455w0rd!
                    minLength: 8
                    maxLength: 32
        LogInUser:
            type: object
            required:
                - email
                - password
            properties:
                email:
                    type: string
                    format: email
                    example: 'john.doe@example.com'
                password:
                    type: string
                    example: p455w0rd!
        AuthUserResponse:
            type: object
            properties:
                token:
                    type: string
                    example: 'example-auth-token-0123456789876543210'
                user:
                    type: object
                    properties:
                        id:
                            type: string
                            example: '0123456789'
                        name:
                            type: string
                            example: 'John Doe'
                        email:
                            type: string
                            format: email
                            example: 'john.doe@example.com'
        UserAlreadyExistsResponse:
            type: object
            properties:
                message:
                    type: string
                    example: 'User already exists.'
        ServerErrorResponse:
            type: object
            properties:
                message:
                    type: string
                    example: 'Something went wrong.'
        InvalidCredentialsResponse:
            type: object
            properties:
                message:
                    type: string
                    example: 'Invalid credentials.'
